syntax = "proto3";
package kvstorepb;

option go_package = "package/kvstorepb";
//Prepare
//Commit
//TxRead
//RawReead
//RawWrite
//RawDelete
message TxContext {
    uint64 txId = 1;
}


message KvTxReadReq {
    TxContext TxContext =1;
    Command  Command = 2;
}

message KvTxReadReply {
    TxContext TxContext = 1;
    Command Command = 2;
    Status Status = 3;
}

message KvTxReq {
    TxContext TxContext = 1;
    repeated Command CommandList = 2;
}

message KvTxReply {
    TxContext TxContext = 1;
    repeated Command CommandList = 2;
    Status Status = 3;
}

message Command {
    uint64 Idx = 1;
    string Op = 2;
    string Key = 3;
    string Val = 4; 
   // string Stage = 5;
}


/* message KvTxWriteReply {
    TxContext TxContext = 1;
    Command   Command = 2;
    Status Status = 3;
}
*/
enum Status {
    Success = 0;
    Failure = 1;
 }

message KvRawReq {
    uint64 id =1;
    uint64 key =2;    
}

message KvRawReply {
    uint64 id = 1;
    string key =2;
    string val =3;
    Status status = 4;    
}

message KvWriteReq {
    uint64 id = 1; 
    uint64 key = 2;
    uint64 val = 3;    
}

message KvWriteReply {
    uint64 id = 1;
    string key =2;
    string val =3;
    Status status = 4;    
}

/* message KvStoreLeader {
    string kvStoreLeader = 1;
    Status status = 2;
}

message TxLeader {
    string txLeader = 1;

}

 message KvNode {
    string KvNode = 1;
    uint64 KvNodeId = 2;
    uint64 KvLeader  = 3;
}

*/
message KvTxStatusReply {
    Status status = 1;
}


service kvstore {

    rpc KvTxPrepare (KvTxReq) returns (KvTxReply);
    rpc KvTxCommit (KvTxReq) returns (KvTxReply);
    rpc KvTxRollback (KvTxReq) returns (KvTxReply);
    rpc KvTxRead (KvTxReadReq) returns (KvTxReadReply);
    rpc KvRawRead (KvRawReq) returns (KvRawReply);
    rpc KvRawWrite (KvRawReq) returns (KvRawReply);
    rpc KvRawDelete (KvTxReq) returns (KvTxReply);
    //XXX:rpc KvGetLeader (TxLeader) returns (KvLeader);
    //XXX:rpc KvGetRaftGroupDetails (TxLeader) returns (stream KvNode);
    //XXX:rpc GetAll (stream Request) returnss (Response);    

}
