// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/kv-storepb.proto

package kvstorepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// message KvTxWriteReply {
//TxContext TxContext = 1;
//Command   Command = 2;
//Status Status = 3;
//}
type Status int32

const (
	Status_Success Status = 0
	Status_Failure Status = 1
)

var Status_name = map[int32]string{
	0: "Success",
	1: "Failure",
}

var Status_value = map[string]int32{
	"Success": 0,
	"Failure": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{0}
}

//Prepare
//Commit
//TxRead
//RawReead
//RawWrite
//RawDelete
type TxContext struct {
	TxId                 uint64   `protobuf:"varint,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ShardId              uint64   `protobuf:"varint,2,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxContext) Reset()         { *m = TxContext{} }
func (m *TxContext) String() string { return proto.CompactTextString(m) }
func (*TxContext) ProtoMessage()    {}
func (*TxContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{0}
}

func (m *TxContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxContext.Unmarshal(m, b)
}
func (m *TxContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxContext.Marshal(b, m, deterministic)
}
func (m *TxContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxContext.Merge(m, src)
}
func (m *TxContext) XXX_Size() int {
	return xxx_messageInfo_TxContext.Size(m)
}
func (m *TxContext) XXX_DiscardUnknown() {
	xxx_messageInfo_TxContext.DiscardUnknown(m)
}

var xxx_messageInfo_TxContext proto.InternalMessageInfo

func (m *TxContext) GetTxId() uint64 {
	if m != nil {
		return m.TxId
	}
	return 0
}

func (m *TxContext) GetShardId() uint64 {
	if m != nil {
		return m.ShardId
	}
	return 0
}

type KvTxReadReq struct {
	TxContext            *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	Command              *Command   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KvTxReadReq) Reset()         { *m = KvTxReadReq{} }
func (m *KvTxReadReq) String() string { return proto.CompactTextString(m) }
func (*KvTxReadReq) ProtoMessage()    {}
func (*KvTxReadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{1}
}

func (m *KvTxReadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvTxReadReq.Unmarshal(m, b)
}
func (m *KvTxReadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvTxReadReq.Marshal(b, m, deterministic)
}
func (m *KvTxReadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvTxReadReq.Merge(m, src)
}
func (m *KvTxReadReq) XXX_Size() int {
	return xxx_messageInfo_KvTxReadReq.Size(m)
}
func (m *KvTxReadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KvTxReadReq.DiscardUnknown(m)
}

var xxx_messageInfo_KvTxReadReq proto.InternalMessageInfo

func (m *KvTxReadReq) GetTxContext() *TxContext {
	if m != nil {
		return m.TxContext
	}
	return nil
}

func (m *KvTxReadReq) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type KvTxReadReply struct {
	TxContext            *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	Command              *Command   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	Status               Status     `protobuf:"varint,3,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KvTxReadReply) Reset()         { *m = KvTxReadReply{} }
func (m *KvTxReadReply) String() string { return proto.CompactTextString(m) }
func (*KvTxReadReply) ProtoMessage()    {}
func (*KvTxReadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{2}
}

func (m *KvTxReadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvTxReadReply.Unmarshal(m, b)
}
func (m *KvTxReadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvTxReadReply.Marshal(b, m, deterministic)
}
func (m *KvTxReadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvTxReadReply.Merge(m, src)
}
func (m *KvTxReadReply) XXX_Size() int {
	return xxx_messageInfo_KvTxReadReply.Size(m)
}
func (m *KvTxReadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KvTxReadReply.DiscardUnknown(m)
}

var xxx_messageInfo_KvTxReadReply proto.InternalMessageInfo

func (m *KvTxReadReply) GetTxContext() *TxContext {
	if m != nil {
		return m.TxContext
	}
	return nil
}

func (m *KvTxReadReply) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *KvTxReadReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type KvTxReq struct {
	TxContext            *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	CommandList          []*Command `protobuf:"bytes,2,rep,name=CommandList,proto3" json:"CommandList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KvTxReq) Reset()         { *m = KvTxReq{} }
func (m *KvTxReq) String() string { return proto.CompactTextString(m) }
func (*KvTxReq) ProtoMessage()    {}
func (*KvTxReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{3}
}

func (m *KvTxReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvTxReq.Unmarshal(m, b)
}
func (m *KvTxReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvTxReq.Marshal(b, m, deterministic)
}
func (m *KvTxReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvTxReq.Merge(m, src)
}
func (m *KvTxReq) XXX_Size() int {
	return xxx_messageInfo_KvTxReq.Size(m)
}
func (m *KvTxReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KvTxReq.DiscardUnknown(m)
}

var xxx_messageInfo_KvTxReq proto.InternalMessageInfo

func (m *KvTxReq) GetTxContext() *TxContext {
	if m != nil {
		return m.TxContext
	}
	return nil
}

func (m *KvTxReq) GetCommandList() []*Command {
	if m != nil {
		return m.CommandList
	}
	return nil
}

type KvTxReply struct {
	TxContext            *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	CommandList          []*Command `protobuf:"bytes,2,rep,name=CommandList,proto3" json:"CommandList,omitempty"`
	Status               Status     `protobuf:"varint,3,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *KvTxReply) Reset()         { *m = KvTxReply{} }
func (m *KvTxReply) String() string { return proto.CompactTextString(m) }
func (*KvTxReply) ProtoMessage()    {}
func (*KvTxReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{4}
}

func (m *KvTxReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvTxReply.Unmarshal(m, b)
}
func (m *KvTxReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvTxReply.Marshal(b, m, deterministic)
}
func (m *KvTxReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvTxReply.Merge(m, src)
}
func (m *KvTxReply) XXX_Size() int {
	return xxx_messageInfo_KvTxReply.Size(m)
}
func (m *KvTxReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KvTxReply.DiscardUnknown(m)
}

var xxx_messageInfo_KvTxReply proto.InternalMessageInfo

func (m *KvTxReply) GetTxContext() *TxContext {
	if m != nil {
		return m.TxContext
	}
	return nil
}

func (m *KvTxReply) GetCommandList() []*Command {
	if m != nil {
		return m.CommandList
	}
	return nil
}

func (m *KvTxReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type Command struct {
	Idx                  uint64   `protobuf:"varint,1,opt,name=Idx,proto3" json:"Idx,omitempty"`
	Op                   string   `protobuf:"bytes,2,opt,name=Op,proto3" json:"Op,omitempty"`
	Key                  string   `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Val                  string   `protobuf:"bytes,4,opt,name=Val,proto3" json:"Val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{5}
}

func (m *Command) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Command.Unmarshal(m, b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Command.Marshal(b, m, deterministic)
}
func (m *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(m, src)
}
func (m *Command) XXX_Size() int {
	return xxx_messageInfo_Command.Size(m)
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

func (m *Command) GetIdx() uint64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

func (m *Command) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *Command) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Command) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type KvRawReq struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  uint64   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvRawReq) Reset()         { *m = KvRawReq{} }
func (m *KvRawReq) String() string { return proto.CompactTextString(m) }
func (*KvRawReq) ProtoMessage()    {}
func (*KvRawReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{6}
}

func (m *KvRawReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvRawReq.Unmarshal(m, b)
}
func (m *KvRawReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvRawReq.Marshal(b, m, deterministic)
}
func (m *KvRawReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvRawReq.Merge(m, src)
}
func (m *KvRawReq) XXX_Size() int {
	return xxx_messageInfo_KvRawReq.Size(m)
}
func (m *KvRawReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KvRawReq.DiscardUnknown(m)
}

var xxx_messageInfo_KvRawReq proto.InternalMessageInfo

func (m *KvRawReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KvRawReq) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

type KvRawReply struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	Status               Status   `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvRawReply) Reset()         { *m = KvRawReply{} }
func (m *KvRawReply) String() string { return proto.CompactTextString(m) }
func (*KvRawReply) ProtoMessage()    {}
func (*KvRawReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{7}
}

func (m *KvRawReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvRawReply.Unmarshal(m, b)
}
func (m *KvRawReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvRawReply.Marshal(b, m, deterministic)
}
func (m *KvRawReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvRawReply.Merge(m, src)
}
func (m *KvRawReply) XXX_Size() int {
	return xxx_messageInfo_KvRawReply.Size(m)
}
func (m *KvRawReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KvRawReply.DiscardUnknown(m)
}

var xxx_messageInfo_KvRawReply proto.InternalMessageInfo

func (m *KvRawReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KvRawReply) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KvRawReply) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *KvRawReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type KvWriteReq struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  uint64   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Val                  uint64   `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvWriteReq) Reset()         { *m = KvWriteReq{} }
func (m *KvWriteReq) String() string { return proto.CompactTextString(m) }
func (*KvWriteReq) ProtoMessage()    {}
func (*KvWriteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{8}
}

func (m *KvWriteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvWriteReq.Unmarshal(m, b)
}
func (m *KvWriteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvWriteReq.Marshal(b, m, deterministic)
}
func (m *KvWriteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvWriteReq.Merge(m, src)
}
func (m *KvWriteReq) XXX_Size() int {
	return xxx_messageInfo_KvWriteReq.Size(m)
}
func (m *KvWriteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KvWriteReq.DiscardUnknown(m)
}

var xxx_messageInfo_KvWriteReq proto.InternalMessageInfo

func (m *KvWriteReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KvWriteReq) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *KvWriteReq) GetVal() uint64 {
	if m != nil {
		return m.Val
	}
	return 0
}

type KvWriteReply struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	Status               Status   `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvWriteReply) Reset()         { *m = KvWriteReply{} }
func (m *KvWriteReply) String() string { return proto.CompactTextString(m) }
func (*KvWriteReply) ProtoMessage()    {}
func (*KvWriteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{9}
}

func (m *KvWriteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvWriteReply.Unmarshal(m, b)
}
func (m *KvWriteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvWriteReply.Marshal(b, m, deterministic)
}
func (m *KvWriteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvWriteReply.Merge(m, src)
}
func (m *KvWriteReply) XXX_Size() int {
	return xxx_messageInfo_KvWriteReply.Size(m)
}
func (m *KvWriteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KvWriteReply.DiscardUnknown(m)
}

var xxx_messageInfo_KvWriteReply proto.InternalMessageInfo

func (m *KvWriteReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KvWriteReply) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KvWriteReply) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *KvWriteReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

//Replica config === Region in tinyKV
// One Replica - one Shard
type KeyRange struct {
	StartKey             uint64   `protobuf:"varint,1,opt,name=StartKey,proto3" json:"StartKey,omitempty"`
	EndKey               uint64   `protobuf:"varint,2,opt,name=EndKey,proto3" json:"EndKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyRange) Reset()         { *m = KeyRange{} }
func (m *KeyRange) String() string { return proto.CompactTextString(m) }
func (*KeyRange) ProtoMessage()    {}
func (*KeyRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{10}
}

func (m *KeyRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyRange.Unmarshal(m, b)
}
func (m *KeyRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyRange.Marshal(b, m, deterministic)
}
func (m *KeyRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyRange.Merge(m, src)
}
func (m *KeyRange) XXX_Size() int {
	return xxx_messageInfo_KeyRange.Size(m)
}
func (m *KeyRange) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyRange.DiscardUnknown(m)
}

var xxx_messageInfo_KeyRange proto.InternalMessageInfo

func (m *KeyRange) GetStartKey() uint64 {
	if m != nil {
		return m.StartKey
	}
	return 0
}

func (m *KeyRange) GetEndKey() uint64 {
	if m != nil {
		return m.EndKey
	}
	return 0
}

type ReplicaConfig struct {
	TxLeader             string   `protobuf:"bytes,1,opt,name=TxLeader,proto3" json:"TxLeader,omitempty"`
	ReplLeader           string   `protobuf:"bytes,2,opt,name=ReplLeader,proto3" json:"ReplLeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaConfig) Reset()         { *m = ReplicaConfig{} }
func (m *ReplicaConfig) String() string { return proto.CompactTextString(m) }
func (*ReplicaConfig) ProtoMessage()    {}
func (*ReplicaConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{11}
}

func (m *ReplicaConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaConfig.Unmarshal(m, b)
}
func (m *ReplicaConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaConfig.Marshal(b, m, deterministic)
}
func (m *ReplicaConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaConfig.Merge(m, src)
}
func (m *ReplicaConfig) XXX_Size() int {
	return xxx_messageInfo_ReplicaConfig.Size(m)
}
func (m *ReplicaConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaConfig proto.InternalMessageInfo

func (m *ReplicaConfig) GetTxLeader() string {
	if m != nil {
		return m.TxLeader
	}
	return ""
}

func (m *ReplicaConfig) GetReplLeader() string {
	if m != nil {
		return m.ReplLeader
	}
	return ""
}

type ShardConfig struct {
	Peers                []string    `protobuf:"bytes,1,rep,name=Peers,proto3" json:"Peers,omitempty"`
	TxLeader             string      `protobuf:"bytes,2,opt,name=TxLeader,proto3" json:"TxLeader,omitempty"`
	Key                  []*KeyRange `protobuf:"bytes,3,rep,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ShardConfig) Reset()         { *m = ShardConfig{} }
func (m *ShardConfig) String() string { return proto.CompactTextString(m) }
func (*ShardConfig) ProtoMessage()    {}
func (*ShardConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{12}
}

func (m *ShardConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardConfig.Unmarshal(m, b)
}
func (m *ShardConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardConfig.Marshal(b, m, deterministic)
}
func (m *ShardConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardConfig.Merge(m, src)
}
func (m *ShardConfig) XXX_Size() int {
	return xxx_messageInfo_ShardConfig.Size(m)
}
func (m *ShardConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ShardConfig proto.InternalMessageInfo

func (m *ShardConfig) GetPeers() []string {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *ShardConfig) GetTxLeader() string {
	if m != nil {
		return m.TxLeader
	}
	return ""
}

func (m *ShardConfig) GetKey() []*KeyRange {
	if m != nil {
		return m.Key
	}
	return nil
}

type ReplicaJoinReq struct {
	ShardId              uint64       `protobuf:"varint,1,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	Config               *ShardConfig `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplicaJoinReq) Reset()         { *m = ReplicaJoinReq{} }
func (m *ReplicaJoinReq) String() string { return proto.CompactTextString(m) }
func (*ReplicaJoinReq) ProtoMessage()    {}
func (*ReplicaJoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{13}
}

func (m *ReplicaJoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaJoinReq.Unmarshal(m, b)
}
func (m *ReplicaJoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaJoinReq.Marshal(b, m, deterministic)
}
func (m *ReplicaJoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaJoinReq.Merge(m, src)
}
func (m *ReplicaJoinReq) XXX_Size() int {
	return xxx_messageInfo_ReplicaJoinReq.Size(m)
}
func (m *ReplicaJoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaJoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaJoinReq proto.InternalMessageInfo

func (m *ReplicaJoinReq) GetShardId() uint64 {
	if m != nil {
		return m.ShardId
	}
	return 0
}

func (m *ReplicaJoinReq) GetConfig() *ShardConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ReplicaJoinReply struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaJoinReply) Reset()         { *m = ReplicaJoinReply{} }
func (m *ReplicaJoinReply) String() string { return proto.CompactTextString(m) }
func (*ReplicaJoinReply) ProtoMessage()    {}
func (*ReplicaJoinReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{14}
}

func (m *ReplicaJoinReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaJoinReply.Unmarshal(m, b)
}
func (m *ReplicaJoinReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaJoinReply.Marshal(b, m, deterministic)
}
func (m *ReplicaJoinReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaJoinReply.Merge(m, src)
}
func (m *ReplicaJoinReply) XXX_Size() int {
	return xxx_messageInfo_ReplicaJoinReply.Size(m)
}
func (m *ReplicaJoinReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaJoinReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaJoinReply proto.InternalMessageInfo

func (m *ReplicaJoinReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type ReplicaLeaveReq struct {
	ShardId              uint64   `protobuf:"varint,1,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaLeaveReq) Reset()         { *m = ReplicaLeaveReq{} }
func (m *ReplicaLeaveReq) String() string { return proto.CompactTextString(m) }
func (*ReplicaLeaveReq) ProtoMessage()    {}
func (*ReplicaLeaveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{15}
}

func (m *ReplicaLeaveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaLeaveReq.Unmarshal(m, b)
}
func (m *ReplicaLeaveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaLeaveReq.Marshal(b, m, deterministic)
}
func (m *ReplicaLeaveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaLeaveReq.Merge(m, src)
}
func (m *ReplicaLeaveReq) XXX_Size() int {
	return xxx_messageInfo_ReplicaLeaveReq.Size(m)
}
func (m *ReplicaLeaveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaLeaveReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaLeaveReq proto.InternalMessageInfo

func (m *ReplicaLeaveReq) GetShardId() uint64 {
	if m != nil {
		return m.ShardId
	}
	return 0
}

type ReplicaLeaveReply struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaLeaveReply) Reset()         { *m = ReplicaLeaveReply{} }
func (m *ReplicaLeaveReply) String() string { return proto.CompactTextString(m) }
func (*ReplicaLeaveReply) ProtoMessage()    {}
func (*ReplicaLeaveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{16}
}

func (m *ReplicaLeaveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaLeaveReply.Unmarshal(m, b)
}
func (m *ReplicaLeaveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaLeaveReply.Marshal(b, m, deterministic)
}
func (m *ReplicaLeaveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaLeaveReply.Merge(m, src)
}
func (m *ReplicaLeaveReply) XXX_Size() int {
	return xxx_messageInfo_ReplicaLeaveReply.Size(m)
}
func (m *ReplicaLeaveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaLeaveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaLeaveReply proto.InternalMessageInfo

func (m *ReplicaLeaveReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type ReplicaConfigReq struct {
	Config               *ReplicaConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReplicaConfigReq) Reset()         { *m = ReplicaConfigReq{} }
func (m *ReplicaConfigReq) String() string { return proto.CompactTextString(m) }
func (*ReplicaConfigReq) ProtoMessage()    {}
func (*ReplicaConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{17}
}

func (m *ReplicaConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaConfigReq.Unmarshal(m, b)
}
func (m *ReplicaConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaConfigReq.Marshal(b, m, deterministic)
}
func (m *ReplicaConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaConfigReq.Merge(m, src)
}
func (m *ReplicaConfigReq) XXX_Size() int {
	return xxx_messageInfo_ReplicaConfigReq.Size(m)
}
func (m *ReplicaConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaConfigReq proto.InternalMessageInfo

func (m *ReplicaConfigReq) GetConfig() *ReplicaConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ReplicaConfigResp struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaConfigResp) Reset()         { *m = ReplicaConfigResp{} }
func (m *ReplicaConfigResp) String() string { return proto.CompactTextString(m) }
func (*ReplicaConfigResp) ProtoMessage()    {}
func (*ReplicaConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{18}
}

func (m *ReplicaConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaConfigResp.Unmarshal(m, b)
}
func (m *ReplicaConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaConfigResp.Marshal(b, m, deterministic)
}
func (m *ReplicaConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaConfigResp.Merge(m, src)
}
func (m *ReplicaConfigResp) XXX_Size() int {
	return xxx_messageInfo_ReplicaConfigResp.Size(m)
}
func (m *ReplicaConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaConfigResp proto.InternalMessageInfo

func (m *ReplicaConfigResp) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type ShardConfigReq struct {
	Config               *ShardConfig `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ShardConfigReq) Reset()         { *m = ShardConfigReq{} }
func (m *ShardConfigReq) String() string { return proto.CompactTextString(m) }
func (*ShardConfigReq) ProtoMessage()    {}
func (*ShardConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{19}
}

func (m *ShardConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardConfigReq.Unmarshal(m, b)
}
func (m *ShardConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardConfigReq.Marshal(b, m, deterministic)
}
func (m *ShardConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardConfigReq.Merge(m, src)
}
func (m *ShardConfigReq) XXX_Size() int {
	return xxx_messageInfo_ShardConfigReq.Size(m)
}
func (m *ShardConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShardConfigReq proto.InternalMessageInfo

func (m *ShardConfigReq) GetConfig() *ShardConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ShardConfigResp struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardConfigResp) Reset()         { *m = ShardConfigResp{} }
func (m *ShardConfigResp) String() string { return proto.CompactTextString(m) }
func (*ShardConfigResp) ProtoMessage()    {}
func (*ShardConfigResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{20}
}

func (m *ShardConfigResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardConfigResp.Unmarshal(m, b)
}
func (m *ShardConfigResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardConfigResp.Marshal(b, m, deterministic)
}
func (m *ShardConfigResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardConfigResp.Merge(m, src)
}
func (m *ShardConfigResp) XXX_Size() int {
	return xxx_messageInfo_ShardConfigResp.Size(m)
}
func (m *ShardConfigResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardConfigResp.DiscardUnknown(m)
}

var xxx_messageInfo_ShardConfigResp proto.InternalMessageInfo

func (m *ShardConfigResp) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type KvStoreLeader struct {
	KvStoreLeader        string   `protobuf:"bytes,1,opt,name=kvStoreLeader,proto3" json:"kvStoreLeader,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvStoreLeader) Reset()         { *m = KvStoreLeader{} }
func (m *KvStoreLeader) String() string { return proto.CompactTextString(m) }
func (*KvStoreLeader) ProtoMessage()    {}
func (*KvStoreLeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{21}
}

func (m *KvStoreLeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvStoreLeader.Unmarshal(m, b)
}
func (m *KvStoreLeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvStoreLeader.Marshal(b, m, deterministic)
}
func (m *KvStoreLeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvStoreLeader.Merge(m, src)
}
func (m *KvStoreLeader) XXX_Size() int {
	return xxx_messageInfo_KvStoreLeader.Size(m)
}
func (m *KvStoreLeader) XXX_DiscardUnknown() {
	xxx_messageInfo_KvStoreLeader.DiscardUnknown(m)
}

var xxx_messageInfo_KvStoreLeader proto.InternalMessageInfo

func (m *KvStoreLeader) GetKvStoreLeader() string {
	if m != nil {
		return m.KvStoreLeader
	}
	return ""
}

func (m *KvStoreLeader) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type KvNode struct {
	KvNode               string   `protobuf:"bytes,1,opt,name=KvNode,proto3" json:"KvNode,omitempty"`
	KvNodeId             uint64   `protobuf:"varint,2,opt,name=KvNodeId,proto3" json:"KvNodeId,omitempty"`
	KvLeader             uint64   `protobuf:"varint,3,opt,name=KvLeader,proto3" json:"KvLeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvNode) Reset()         { *m = KvNode{} }
func (m *KvNode) String() string { return proto.CompactTextString(m) }
func (*KvNode) ProtoMessage()    {}
func (*KvNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{22}
}

func (m *KvNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvNode.Unmarshal(m, b)
}
func (m *KvNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvNode.Marshal(b, m, deterministic)
}
func (m *KvNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvNode.Merge(m, src)
}
func (m *KvNode) XXX_Size() int {
	return xxx_messageInfo_KvNode.Size(m)
}
func (m *KvNode) XXX_DiscardUnknown() {
	xxx_messageInfo_KvNode.DiscardUnknown(m)
}

var xxx_messageInfo_KvNode proto.InternalMessageInfo

func (m *KvNode) GetKvNode() string {
	if m != nil {
		return m.KvNode
	}
	return ""
}

func (m *KvNode) GetKvNodeId() uint64 {
	if m != nil {
		return m.KvNodeId
	}
	return 0
}

func (m *KvNode) GetKvLeader() uint64 {
	if m != nil {
		return m.KvLeader
	}
	return 0
}

type KvTxStatusReply struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KvTxStatusReply) Reset()         { *m = KvTxStatusReply{} }
func (m *KvTxStatusReply) String() string { return proto.CompactTextString(m) }
func (*KvTxStatusReply) ProtoMessage()    {}
func (*KvTxStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{23}
}

func (m *KvTxStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KvTxStatusReply.Unmarshal(m, b)
}
func (m *KvTxStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KvTxStatusReply.Marshal(b, m, deterministic)
}
func (m *KvTxStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KvTxStatusReply.Merge(m, src)
}
func (m *KvTxStatusReply) XXX_Size() int {
	return xxx_messageInfo_KvTxStatusReply.Size(m)
}
func (m *KvTxStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KvTxStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_KvTxStatusReply proto.InternalMessageInfo

func (m *KvTxStatusReply) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Success
}

type ReplicaStatus struct {
	KvStoreInfo          []*KvStoreLeader `protobuf:"bytes,1,rep,name=KvStoreInfo,proto3" json:"KvStoreInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplicaStatus) Reset()         { *m = ReplicaStatus{} }
func (m *ReplicaStatus) String() string { return proto.CompactTextString(m) }
func (*ReplicaStatus) ProtoMessage()    {}
func (*ReplicaStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0110821fa439764, []int{24}
}

func (m *ReplicaStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaStatus.Unmarshal(m, b)
}
func (m *ReplicaStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaStatus.Marshal(b, m, deterministic)
}
func (m *ReplicaStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaStatus.Merge(m, src)
}
func (m *ReplicaStatus) XXX_Size() int {
	return xxx_messageInfo_ReplicaStatus.Size(m)
}
func (m *ReplicaStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaStatus proto.InternalMessageInfo

func (m *ReplicaStatus) GetKvStoreInfo() []*KvStoreLeader {
	if m != nil {
		return m.KvStoreInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("kvstorepb.Status", Status_name, Status_value)
	proto.RegisterType((*TxContext)(nil), "kvstorepb.TxContext")
	proto.RegisterType((*KvTxReadReq)(nil), "kvstorepb.KvTxReadReq")
	proto.RegisterType((*KvTxReadReply)(nil), "kvstorepb.KvTxReadReply")
	proto.RegisterType((*KvTxReq)(nil), "kvstorepb.KvTxReq")
	proto.RegisterType((*KvTxReply)(nil), "kvstorepb.KvTxReply")
	proto.RegisterType((*Command)(nil), "kvstorepb.Command")
	proto.RegisterType((*KvRawReq)(nil), "kvstorepb.KvRawReq")
	proto.RegisterType((*KvRawReply)(nil), "kvstorepb.KvRawReply")
	proto.RegisterType((*KvWriteReq)(nil), "kvstorepb.KvWriteReq")
	proto.RegisterType((*KvWriteReply)(nil), "kvstorepb.KvWriteReply")
	proto.RegisterType((*KeyRange)(nil), "kvstorepb.KeyRange")
	proto.RegisterType((*ReplicaConfig)(nil), "kvstorepb.ReplicaConfig")
	proto.RegisterType((*ShardConfig)(nil), "kvstorepb.ShardConfig")
	proto.RegisterType((*ReplicaJoinReq)(nil), "kvstorepb.ReplicaJoinReq")
	proto.RegisterType((*ReplicaJoinReply)(nil), "kvstorepb.ReplicaJoinReply")
	proto.RegisterType((*ReplicaLeaveReq)(nil), "kvstorepb.ReplicaLeaveReq")
	proto.RegisterType((*ReplicaLeaveReply)(nil), "kvstorepb.ReplicaLeaveReply")
	proto.RegisterType((*ReplicaConfigReq)(nil), "kvstorepb.ReplicaConfigReq")
	proto.RegisterType((*ReplicaConfigResp)(nil), "kvstorepb.ReplicaConfigResp")
	proto.RegisterType((*ShardConfigReq)(nil), "kvstorepb.ShardConfigReq")
	proto.RegisterType((*ShardConfigResp)(nil), "kvstorepb.ShardConfigResp")
	proto.RegisterType((*KvStoreLeader)(nil), "kvstorepb.KvStoreLeader")
	proto.RegisterType((*KvNode)(nil), "kvstorepb.KvNode")
	proto.RegisterType((*KvTxStatusReply)(nil), "kvstorepb.KvTxStatusReply")
	proto.RegisterType((*ReplicaStatus)(nil), "kvstorepb.ReplicaStatus")
}

func init() {
	proto.RegisterFile("proto/kv-storepb.proto", fileDescriptor_f0110821fa439764)
}

var fileDescriptor_f0110821fa439764 = []byte{
	// 906 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xff, 0x6f, 0xdb, 0x44,
	0x14, 0xc7, 0x4e, 0x96, 0xd4, 0x2f, 0x34, 0x6d, 0xaf, 0x5d, 0xe5, 0x79, 0x08, 0x55, 0x16, 0x48,
	0x05, 0x46, 0x87, 0x02, 0x62, 0x0c, 0x95, 0x69, 0xa2, 0x03, 0x94, 0x39, 0xa2, 0xd3, 0x25, 0x0c,
	0xb4, 0x9f, 0xb8, 0xc6, 0xd7, 0x62, 0xc5, 0x89, 0x1d, 0xdb, 0xf5, 0x92, 0xff, 0x85, 0x1f, 0xf8,
	0xaf, 0xf8, 0x77, 0xd0, 0xbb, 0x3b, 0x3b, 0x67, 0xb2, 0xac, 0x73, 0x25, 0xf8, 0xed, 0xee, 0xbd,
	0x77, 0x9f, 0xf7, 0xe5, 0xee, 0x7d, 0xde, 0xc1, 0x61, 0x9c, 0x44, 0x59, 0xf4, 0x70, 0x92, 0x7f,
	0x9e, 0x66, 0x51, 0xc2, 0xe3, 0x8b, 0x13, 0x21, 0x20, 0xd6, 0x24, 0x57, 0x02, 0xf7, 0x31, 0x58,
	0xa3, 0xc5, 0x59, 0x34, 0xcb, 0xf8, 0x22, 0x23, 0x04, 0x9a, 0xa3, 0x45, 0xdf, 0xb7, 0x8d, 0x23,
	0xe3, 0xb8, 0x49, 0xc5, 0x9a, 0xd8, 0xd0, 0x1e, 0xfe, 0xc1, 0x12, 0xbf, 0xef, 0xdb, 0xa6, 0x10,
	0x17, 0x5b, 0x37, 0x82, 0x8e, 0x97, 0x8f, 0x16, 0x94, 0x33, 0x9f, 0xf2, 0x39, 0xe9, 0x69, 0x48,
	0x02, 0xa1, 0xd3, 0x3b, 0x38, 0x29, 0x1d, 0x9d, 0x94, 0x3a, 0xaa, 0x39, 0x7c, 0x00, 0xed, 0xb3,
	0x68, 0x3a, 0x65, 0x33, 0x09, 0xde, 0xe9, 0x11, 0xed, 0x84, 0xd2, 0xd0, 0xc2, 0xc4, 0xfd, 0xd3,
	0x80, 0xed, 0x95, 0xc7, 0x38, 0x5c, 0xfe, 0xf7, 0x3e, 0xc9, 0x27, 0xd0, 0x1a, 0x66, 0x2c, 0xbb,
	0x4e, 0xed, 0xc6, 0x91, 0x71, 0xdc, 0xed, 0xed, 0x69, 0xc6, 0x52, 0x41, 0x95, 0x81, 0x9b, 0x42,
	0x5b, 0x46, 0x77, 0xbb, 0x5a, 0x7c, 0x05, 0x1d, 0xe5, 0x74, 0x10, 0xa4, 0x99, 0x6d, 0x1e, 0x35,
	0x36, 0xc4, 0xa6, 0x9b, 0xb9, 0x7f, 0x19, 0x60, 0x49, 0xaf, 0xb7, 0xad, 0xc7, 0xad, 0xfc, 0xd6,
	0xa9, 0xcb, 0x79, 0x59, 0x70, 0xb2, 0x0b, 0x8d, 0xbe, 0xbf, 0x50, 0xef, 0x0b, 0x97, 0xa4, 0x0b,
	0xe6, 0x79, 0x2c, 0x2e, 0xc2, 0xa2, 0xe6, 0x79, 0x8c, 0x16, 0x1e, 0x5f, 0x0a, 0x50, 0x8b, 0xe2,
	0x12, 0x25, 0x2f, 0x59, 0x68, 0x37, 0xa5, 0xe4, 0x25, 0x0b, 0xdd, 0x07, 0xb0, 0xe5, 0xe5, 0x94,
	0xbd, 0xc6, 0x4a, 0x77, 0xc1, 0x0c, 0x8a, 0x07, 0x6b, 0x06, 0xc2, 0xc3, 0x84, 0x2f, 0xd5, 0x53,
	0xc5, 0xa5, 0x3b, 0x01, 0x50, 0xd6, 0x58, 0xa1, 0xb7, 0xd8, 0x5b, 0xc2, 0x1e, 0x25, 0x39, 0x0b,
	0x8b, 0x08, 0x72, 0x16, 0x62, 0xae, 0xa9, 0xcc, 0xb5, 0xb9, 0x31, 0x57, 0x69, 0xe0, 0x3e, 0x45,
	0x67, 0xbf, 0x26, 0x41, 0xc6, 0xdf, 0x29, 0x38, 0xdd, 0x59, 0x53, 0x38, 0x73, 0xa7, 0xf0, 0x7e,
	0x89, 0xf0, 0x3f, 0x04, 0xfc, 0x04, 0xb6, 0x3c, 0xbe, 0xa4, 0x6c, 0x76, 0xc5, 0x89, 0x03, 0x5b,
	0xc3, 0x8c, 0x25, 0x19, 0x5e, 0x80, 0x74, 0x58, 0xee, 0xc9, 0x21, 0xb4, 0x7e, 0x98, 0xf9, 0x5e,
	0x19, 0xbd, 0xda, 0xb9, 0x1e, 0x6c, 0x63, 0x9c, 0xc1, 0x98, 0x9d, 0x45, 0xb3, 0xcb, 0xe0, 0x0a,
	0x41, 0x46, 0x8b, 0x01, 0x67, 0x3e, 0x4f, 0x04, 0x88, 0x45, 0xcb, 0x3d, 0xf9, 0x10, 0x00, 0x8d,
	0x95, 0x56, 0xa6, 0xa0, 0x49, 0xdc, 0x4b, 0xe8, 0x08, 0x72, 0x51, 0x50, 0x07, 0x70, 0xe7, 0x05,
	0xe7, 0x49, 0x6a, 0x1b, 0x47, 0x8d, 0x63, 0x8b, 0xca, 0x4d, 0xc5, 0x81, 0xf9, 0x2f, 0x07, 0x1f,
	0x17, 0xaf, 0x07, 0xdf, 0xf0, 0xbe, 0x96, 0x75, 0x91, 0xa3, 0x78, 0x52, 0xee, 0x2b, 0xe8, 0xaa,
	0xa0, 0x9f, 0x47, 0xc1, 0x0c, 0x6f, 0x4a, 0x63, 0x39, 0xa3, 0xc2, 0x72, 0xe4, 0x04, 0x5a, 0x32,
	0x1c, 0xc5, 0x16, 0x87, 0x7a, 0x2d, 0x57, 0xc1, 0x52, 0x65, 0xe5, 0x7e, 0x07, 0xbb, 0x15, 0x6c,
	0xbc, 0xc3, 0x55, 0xb3, 0x18, 0x37, 0x35, 0xcb, 0x67, 0xb0, 0xa3, 0x8e, 0x0f, 0x38, 0xcb, 0xf9,
	0x5b, 0x63, 0x73, 0x9f, 0xc0, 0x5e, 0xd5, 0xb8, 0xa6, 0xb3, 0x67, 0x65, 0xac, 0x2a, 0x09, 0x3e,
	0x27, 0x5f, 0x40, 0x6b, 0x2c, 0xf3, 0x95, 0xfc, 0x61, 0x6b, 0xc7, 0xab, 0xc6, 0xca, 0x4e, 0x8b,
	0xa2, 0x40, 0x49, 0xe3, 0x3a, 0x51, 0x3c, 0x85, 0xae, 0x5e, 0x48, 0x3e, 0xd7, 0x6a, 0x6e, 0xbc,
	0x53, 0xcd, 0x4f, 0x61, 0xa7, 0x82, 0x50, 0xcf, 0xff, 0xef, 0x38, 0x55, 0x86, 0xa8, 0x53, 0xaf,
	0xe8, 0x23, 0xd8, 0x9e, 0xe8, 0x02, 0xf5, 0x8e, 0xab, 0x42, 0xad, 0xc9, 0xcc, 0x9b, 0x9a, 0xec,
	0x37, 0x68, 0x79, 0xf9, 0xcf, 0x91, 0xcf, 0xb1, 0x8d, 0xe4, 0x4a, 0x61, 0x16, 0x72, 0x07, 0x29,
	0x0d, 0x57, 0xe5, 0x98, 0x2d, 0xf7, 0x52, 0xa7, 0x22, 0x69, 0x14, 0x3a, 0xd5, 0x31, 0xa7, 0xb0,
	0x83, 0xec, 0xaf, 0xfc, 0x15, 0xf7, 0x9f, 0xde, 0x94, 0xb9, 0x8a, 0x6b, 0xd5, 0xbc, 0x52, 0x41,
	0xbe, 0xc5, 0x91, 0x2e, 0x92, 0xec, 0xcf, 0x2e, 0x23, 0xd1, 0x77, 0xd5, 0x17, 0x50, 0x29, 0x14,
	0xd5, 0x8d, 0x3f, 0x75, 0x8b, 0x8a, 0x93, 0x0e, 0xb4, 0x87, 0xd7, 0xe3, 0x31, 0x4f, 0xd3, 0xdd,
	0xf7, 0x70, 0xf3, 0x23, 0x0b, 0xc2, 0xeb, 0x84, 0xef, 0x1a, 0xbd, 0xbf, 0xef, 0x40, 0x5b, 0x81,
	0x91, 0x47, 0xf2, 0xfb, 0xf0, 0x22, 0xe1, 0x31, 0x4b, 0x38, 0x21, 0x15, 0x2f, 0x62, 0x8c, 0x3a,
	0x07, 0x6b, 0x32, 0x4c, 0xf0, 0x6b, 0xe4, 0x58, 0x9c, 0x5f, 0xd3, 0x69, 0x90, 0xd5, 0x38, 0xf7,
	0x0d, 0x32, 0xeb, 0x68, 0x41, 0xa3, 0x30, 0xbc, 0x60, 0xe3, 0x49, 0x8d, 0x93, 0xa7, 0x78, 0x03,
	0xf2, 0xdf, 0x41, 0x0e, 0xd7, 0x2c, 0xc4, 0xf7, 0xc7, 0xb1, 0xdf, 0x28, 0xc7, 0xd3, 0x8f, 0x70,
	0x42, 0x8b, 0x01, 0xc4, 0x7c, 0x52, 0x21, 0x25, 0x35, 0xc4, 0x9c, 0xbb, 0xeb, 0x42, 0x19, 0xb0,
	0x9c, 0x5c, 0x62, 0x1a, 0xd4, 0x3a, 0xf9, 0x18, 0x6b, 0x4b, 0xd9, 0xeb, 0x67, 0x3c, 0xe4, 0x35,
	0x8f, 0xfe, 0x84, 0xdd, 0xa0, 0x31, 0x18, 0xb9, 0xb7, 0x4e, 0x00, 0x8a, 0x35, 0x9d, 0xfb, 0x9b,
	0x54, 0x08, 0xf4, 0x1c, 0xba, 0x25, 0x90, 0xa0, 0x27, 0xe2, 0xac, 0x9b, 0x17, 0x24, 0xe7, 0x7c,
	0xb0, 0x51, 0x87, 0x58, 0x14, 0xee, 0x96, 0x58, 0xbf, 0xc4, 0x3e, 0xcb, 0xb8, 0x1a, 0x11, 0xf7,
	0x37, 0xb2, 0xd3, 0x9b, 0x31, 0x35, 0x86, 0x18, 0xc0, 0xbe, 0x97, 0x0b, 0xda, 0xa8, 0x20, 0xde,
	0xdb, 0xc0, 0x35, 0x7c, 0xee, 0x38, 0x9b, 0x54, 0x69, 0xfc, 0xfd, 0xfe, 0xab, 0xbd, 0x98, 0x8d,
	0x27, 0xec, 0x8a, 0x3f, 0x2c, 0x8d, 0x2e, 0x5a, 0xe2, 0xbb, 0xfd, 0xe5, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0x97, 0xf9, 0xf2, 0x88, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KvstoreClient is the client API for Kvstore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KvstoreClient interface {
	KvTxPrepare(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxCommit(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxRollback(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxRead(ctx context.Context, in *KvTxReadReq, opts ...grpc.CallOption) (*KvTxReadReply, error)
	KvRawRead(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvRawWrite(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvRawDelete(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvReplicaJoin(ctx context.Context, in *ReplicaJoinReq, opts ...grpc.CallOption) (*ReplicaJoinReply, error)
	KvReplicaLeave(ctx context.Context, in *ReplicaLeaveReq, opts ...grpc.CallOption) (*ReplicaLeaveReply, error)
	KvReplicaUpdateConfig(ctx context.Context, in *ReplicaConfigReq, opts ...grpc.CallOption) (*ReplicaConfigResp, error)
	KvShardUpdateConfig(ctx context.Context, in *ShardConfigReq, opts ...grpc.CallOption) (*ShardConfigResp, error)
}

type kvstoreClient struct {
	cc grpc.ClientConnInterface
}

func NewKvstoreClient(cc grpc.ClientConnInterface) KvstoreClient {
	return &kvstoreClient{cc}
}

func (c *kvstoreClient) KvTxPrepare(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxPrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxCommit(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxRollback(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxRollback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxRead(ctx context.Context, in *KvTxReadReq, opts ...grpc.CallOption) (*KvTxReadReply, error) {
	out := new(KvTxReadReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawRead(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawWrite(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawDelete(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaJoin(ctx context.Context, in *ReplicaJoinReq, opts ...grpc.CallOption) (*ReplicaJoinReply, error) {
	out := new(ReplicaJoinReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaLeave(ctx context.Context, in *ReplicaLeaveReq, opts ...grpc.CallOption) (*ReplicaLeaveReply, error) {
	out := new(ReplicaLeaveReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaUpdateConfig(ctx context.Context, in *ReplicaConfigReq, opts ...grpc.CallOption) (*ReplicaConfigResp, error) {
	out := new(ReplicaConfigResp)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaUpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvShardUpdateConfig(ctx context.Context, in *ShardConfigReq, opts ...grpc.CallOption) (*ShardConfigResp, error) {
	out := new(ShardConfigResp)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvShardUpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvstoreServer is the server API for Kvstore service.
type KvstoreServer interface {
	KvTxPrepare(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxCommit(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxRollback(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxRead(context.Context, *KvTxReadReq) (*KvTxReadReply, error)
	KvRawRead(context.Context, *KvRawReq) (*KvRawReply, error)
	KvRawWrite(context.Context, *KvRawReq) (*KvRawReply, error)
	KvRawDelete(context.Context, *KvRawReq) (*KvRawReply, error)
	KvReplicaJoin(context.Context, *ReplicaJoinReq) (*ReplicaJoinReply, error)
	KvReplicaLeave(context.Context, *ReplicaLeaveReq) (*ReplicaLeaveReply, error)
	KvReplicaUpdateConfig(context.Context, *ReplicaConfigReq) (*ReplicaConfigResp, error)
	KvShardUpdateConfig(context.Context, *ShardConfigReq) (*ShardConfigResp, error)
}

// UnimplementedKvstoreServer can be embedded to have forward compatible implementations.
type UnimplementedKvstoreServer struct {
}

func (*UnimplementedKvstoreServer) KvTxPrepare(ctx context.Context, req *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxPrepare not implemented")
}
func (*UnimplementedKvstoreServer) KvTxCommit(ctx context.Context, req *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxCommit not implemented")
}
func (*UnimplementedKvstoreServer) KvTxRollback(ctx context.Context, req *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxRollback not implemented")
}
func (*UnimplementedKvstoreServer) KvTxRead(ctx context.Context, req *KvTxReadReq) (*KvTxReadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawRead(ctx context.Context, req *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawWrite(ctx context.Context, req *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawWrite not implemented")
}
func (*UnimplementedKvstoreServer) KvRawDelete(ctx context.Context, req *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawDelete not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaJoin(ctx context.Context, req *ReplicaJoinReq) (*ReplicaJoinReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaJoin not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaLeave(ctx context.Context, req *ReplicaLeaveReq) (*ReplicaLeaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaLeave not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaUpdateConfig(ctx context.Context, req *ReplicaConfigReq) (*ReplicaConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaUpdateConfig not implemented")
}
func (*UnimplementedKvstoreServer) KvShardUpdateConfig(ctx context.Context, req *ShardConfigReq) (*ShardConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvShardUpdateConfig not implemented")
}

func RegisterKvstoreServer(s *grpc.Server, srv KvstoreServer) {
	s.RegisterService(&_Kvstore_serviceDesc, srv)
}

func _Kvstore_KvTxPrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxPrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxPrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxPrepare(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxCommit(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxRollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxRollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxRollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxRollback(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxRead(ctx, req.(*KvTxReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawRead(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawWrite(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawDelete(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaJoin(ctx, req.(*ReplicaJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaLeave(ctx, req.(*ReplicaLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaUpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaUpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaUpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaUpdateConfig(ctx, req.(*ReplicaConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvShardUpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvShardUpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvShardUpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvShardUpdateConfig(ctx, req.(*ShardConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kvstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvstorepb.kvstore",
	HandlerType: (*KvstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KvTxPrepare",
			Handler:    _Kvstore_KvTxPrepare_Handler,
		},
		{
			MethodName: "KvTxCommit",
			Handler:    _Kvstore_KvTxCommit_Handler,
		},
		{
			MethodName: "KvTxRollback",
			Handler:    _Kvstore_KvTxRollback_Handler,
		},
		{
			MethodName: "KvTxRead",
			Handler:    _Kvstore_KvTxRead_Handler,
		},
		{
			MethodName: "KvRawRead",
			Handler:    _Kvstore_KvRawRead_Handler,
		},
		{
			MethodName: "KvRawWrite",
			Handler:    _Kvstore_KvRawWrite_Handler,
		},
		{
			MethodName: "KvRawDelete",
			Handler:    _Kvstore_KvRawDelete_Handler,
		},
		{
			MethodName: "KvReplicaJoin",
			Handler:    _Kvstore_KvReplicaJoin_Handler,
		},
		{
			MethodName: "KvReplicaLeave",
			Handler:    _Kvstore_KvReplicaLeave_Handler,
		},
		{
			MethodName: "KvReplicaUpdateConfig",
			Handler:    _Kvstore_KvReplicaUpdateConfig_Handler,
		},
		{
			MethodName: "KvShardUpdateConfig",
			Handler:    _Kvstore_KvShardUpdateConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/kv-storepb.proto",
}
