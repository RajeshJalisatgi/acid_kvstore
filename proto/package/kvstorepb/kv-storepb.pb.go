// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: proto/kv-storepb.proto

package kvstorepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_Success Status = 0
	Status_Failure Status = 1
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Success",
		1: "Failure",
	}
	Status_value = map[string]int32{
		"Success": 0,
		"Failure": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_kv_storepb_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_kv_storepb_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{0}
}

//Prepare
//Commit
//TxRead
//RawReead
//RawWrite
//RawDelete
type TxContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId uint64 `protobuf:"varint,1,opt,name=txId,proto3" json:"txId,omitempty"`
}

func (x *TxContext) Reset() {
	*x = TxContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxContext) ProtoMessage() {}

func (x *TxContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxContext.ProtoReflect.Descriptor instead.
func (*TxContext) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{0}
}

func (x *TxContext) GetTxId() uint64 {
	if x != nil {
		return x.TxId
	}
	return 0
}

type KvTxReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=txContext,proto3" json:"txContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *KvTxReadReq) Reset() {
	*x = KvTxReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReadReq) ProtoMessage() {}

func (x *KvTxReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReadReq.ProtoReflect.Descriptor instead.
func (*KvTxReadReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{1}
}

func (x *KvTxReadReq) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReadReq) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type KvTxReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=txContext,proto3" json:"txContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Status    Status     `protobuf:"varint,3,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvTxReadReply) Reset() {
	*x = KvTxReadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReadReply) ProtoMessage() {}

func (x *KvTxReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReadReply.ProtoReflect.Descriptor instead.
func (*KvTxReadReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{2}
}

func (x *KvTxReadReply) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReadReply) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *KvTxReadReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx uint64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
	Op  string `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`
	Key uint64 `protobuf:"varint,3,opt,name=key,proto3" json:"key,omitempty"`
	Val uint64 `protobuf:"varint,4,opt,name=Val,proto3" json:"Val,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{3}
}

func (x *Command) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Command) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Command) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *Command) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type KvTxWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=txContext,proto3" json:"txContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *KvTxWriteReq) Reset() {
	*x = KvTxWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxWriteReq) ProtoMessage() {}

func (x *KvTxWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxWriteReq.ProtoReflect.Descriptor instead.
func (*KvTxWriteReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{4}
}

func (x *KvTxWriteReq) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxWriteReq) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type KvTxWriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=txContext,proto3" json:"txContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Status    Status     `protobuf:"varint,3,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvTxWriteReply) Reset() {
	*x = KvTxWriteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxWriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxWriteReply) ProtoMessage() {}

func (x *KvTxWriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxWriteReply.ProtoReflect.Descriptor instead.
func (*KvTxWriteReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{5}
}

func (x *KvTxWriteReply) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxWriteReply) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *KvTxWriteReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KvReadReq) Reset() {
	*x = KvReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvReadReq) ProtoMessage() {}

func (x *KvReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvReadReq.ProtoReflect.Descriptor instead.
func (*KvReadReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{6}
}

func (x *KvReadReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvReadReq) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

type KvReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key    uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Val    uint64 `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
	Status Status `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvReadReply) Reset() {
	*x = KvReadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvReadReply) ProtoMessage() {}

func (x *KvReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvReadReply.ProtoReflect.Descriptor instead.
func (*KvReadReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{7}
}

func (x *KvReadReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvReadReply) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *KvReadReply) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *KvReadReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Val uint64 `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KvWriteReq) Reset() {
	*x = KvWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvWriteReq) ProtoMessage() {}

func (x *KvWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvWriteReq.ProtoReflect.Descriptor instead.
func (*KvWriteReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{8}
}

func (x *KvWriteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvWriteReq) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *KvWriteReq) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type KvWriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key    uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Val    uint64 `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
	Status Status `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvWriteReply) Reset() {
	*x = KvWriteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvWriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvWriteReply) ProtoMessage() {}

func (x *KvWriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvWriteReply.ProtoReflect.Descriptor instead.
func (*KvWriteReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{9}
}

func (x *KvWriteReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvWriteReply) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *KvWriteReply) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *KvWriteReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

var File_proto_kv_storepb_proto protoreflect.FileDescriptor

var file_proto_kv_storepb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x76, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x22, 0x1f, 0x0a, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0b, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x74, 0x78,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x0d, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x52, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64,
	0x78, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x56, 0x61, 0x6c, 0x22, 0x70, 0x0a, 0x0c, 0x4b, 0x76, 0x54, 0x78, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09,
	0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x4b, 0x76, 0x54, 0x78,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x74, 0x78,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x09, 0x74, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x09, 0x4b, 0x76, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x6c, 0x0a, 0x0b, 0x4b, 0x76, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x0a, 0x4b, 0x76, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x6d, 0x0a, 0x0c, 0x4b, 0x76, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x22, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x01, 0x32, 0x88, 0x03, 0x0a, 0x07, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x4b, 0x76, 0x54, 0x78, 0x50, 0x72, 0x65,
	0x70, 0x61, 0x72, 0x65, 0x12, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x4b, 0x76, 0x54, 0x78, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x0a, 0x4b, 0x76, 0x54, 0x78,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x08, 0x4b, 0x76,
	0x54, 0x78, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x4b, 0x76, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70,
	0x62, 0x2e, 0x4b, 0x76, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0a, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x41, 0x0a, 0x0b, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x17, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54,
	0x78, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2f,
	0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_kv_storepb_proto_rawDescOnce sync.Once
	file_proto_kv_storepb_proto_rawDescData = file_proto_kv_storepb_proto_rawDesc
)

func file_proto_kv_storepb_proto_rawDescGZIP() []byte {
	file_proto_kv_storepb_proto_rawDescOnce.Do(func() {
		file_proto_kv_storepb_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_kv_storepb_proto_rawDescData)
	})
	return file_proto_kv_storepb_proto_rawDescData
}

var file_proto_kv_storepb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_kv_storepb_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_kv_storepb_proto_goTypes = []interface{}{
	(Status)(0),            // 0: kvstorepb.Status
	(*TxContext)(nil),      // 1: kvstorepb.TxContext
	(*KvTxReadReq)(nil),    // 2: kvstorepb.KvTxReadReq
	(*KvTxReadReply)(nil),  // 3: kvstorepb.KvTxReadReply
	(*Command)(nil),        // 4: kvstorepb.Command
	(*KvTxWriteReq)(nil),   // 5: kvstorepb.KvTxWriteReq
	(*KvTxWriteReply)(nil), // 6: kvstorepb.KvTxWriteReply
	(*KvReadReq)(nil),      // 7: kvstorepb.KvReadReq
	(*KvReadReply)(nil),    // 8: kvstorepb.KvReadReply
	(*KvWriteReq)(nil),     // 9: kvstorepb.KvWriteReq
	(*KvWriteReply)(nil),   // 10: kvstorepb.KvWriteReply
}
var file_proto_kv_storepb_proto_depIdxs = []int32{
	1,  // 0: kvstorepb.KvTxReadReq.txContext:type_name -> kvstorepb.TxContext
	4,  // 1: kvstorepb.KvTxReadReq.command:type_name -> kvstorepb.Command
	1,  // 2: kvstorepb.KvTxReadReply.txContext:type_name -> kvstorepb.TxContext
	4,  // 3: kvstorepb.KvTxReadReply.command:type_name -> kvstorepb.Command
	0,  // 4: kvstorepb.KvTxReadReply.status:type_name -> kvstorepb.Status
	1,  // 5: kvstorepb.KvTxWriteReq.txContext:type_name -> kvstorepb.TxContext
	4,  // 6: kvstorepb.KvTxWriteReq.command:type_name -> kvstorepb.Command
	1,  // 7: kvstorepb.KvTxWriteReply.txContext:type_name -> kvstorepb.TxContext
	4,  // 8: kvstorepb.KvTxWriteReply.command:type_name -> kvstorepb.Command
	0,  // 9: kvstorepb.KvTxWriteReply.status:type_name -> kvstorepb.Status
	0,  // 10: kvstorepb.KvReadReply.status:type_name -> kvstorepb.Status
	0,  // 11: kvstorepb.KvWriteReply.status:type_name -> kvstorepb.Status
	5,  // 12: kvstorepb.kvstore.KvTxPrepare:input_type -> kvstorepb.KvTxWriteReq
	5,  // 13: kvstorepb.kvstore.KvTxCommit:input_type -> kvstorepb.KvTxWriteReq
	2,  // 14: kvstorepb.kvstore.KvTxRead:input_type -> kvstorepb.KvTxReadReq
	7,  // 15: kvstorepb.kvstore.KvRawRead:input_type -> kvstorepb.KvReadReq
	9,  // 16: kvstorepb.kvstore.KvRawWrite:input_type -> kvstorepb.KvWriteReq
	5,  // 17: kvstorepb.kvstore.KvRawDelete:input_type -> kvstorepb.KvTxWriteReq
	6,  // 18: kvstorepb.kvstore.KvTxPrepare:output_type -> kvstorepb.KvTxWriteReply
	6,  // 19: kvstorepb.kvstore.KvTxCommit:output_type -> kvstorepb.KvTxWriteReply
	3,  // 20: kvstorepb.kvstore.KvTxRead:output_type -> kvstorepb.KvTxReadReply
	8,  // 21: kvstorepb.kvstore.KvRawRead:output_type -> kvstorepb.KvReadReply
	10, // 22: kvstorepb.kvstore.KvRawWrite:output_type -> kvstorepb.KvWriteReply
	6,  // 23: kvstorepb.kvstore.KvRawDelete:output_type -> kvstorepb.KvTxWriteReply
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_kv_storepb_proto_init() }
func file_proto_kv_storepb_proto_init() {
	if File_proto_kv_storepb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_kv_storepb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxWriteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvReadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvWriteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_kv_storepb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kv_storepb_proto_goTypes,
		DependencyIndexes: file_proto_kv_storepb_proto_depIdxs,
		EnumInfos:         file_proto_kv_storepb_proto_enumTypes,
		MessageInfos:      file_proto_kv_storepb_proto_msgTypes,
	}.Build()
	File_proto_kv_storepb_proto = out.File
	file_proto_kv_storepb_proto_rawDesc = nil
	file_proto_kv_storepb_proto_goTypes = nil
	file_proto_kv_storepb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KvstoreClient is the client API for Kvstore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KvstoreClient interface {
	KvTxPrepare(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error)
	KvTxCommit(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error)
	KvTxRead(ctx context.Context, in *KvTxReadReq, opts ...grpc.CallOption) (*KvTxReadReply, error)
	KvRawRead(ctx context.Context, in *KvReadReq, opts ...grpc.CallOption) (*KvReadReply, error)
	KvRawWrite(ctx context.Context, in *KvWriteReq, opts ...grpc.CallOption) (*KvWriteReply, error)
	KvRawDelete(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error)
}

type kvstoreClient struct {
	cc grpc.ClientConnInterface
}

func NewKvstoreClient(cc grpc.ClientConnInterface) KvstoreClient {
	return &kvstoreClient{cc}
}

func (c *kvstoreClient) KvTxPrepare(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error) {
	out := new(KvTxWriteReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxPrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxCommit(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error) {
	out := new(KvTxWriteReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxRead(ctx context.Context, in *KvTxReadReq, opts ...grpc.CallOption) (*KvTxReadReply, error) {
	out := new(KvTxReadReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawRead(ctx context.Context, in *KvReadReq, opts ...grpc.CallOption) (*KvReadReply, error) {
	out := new(KvReadReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawWrite(ctx context.Context, in *KvWriteReq, opts ...grpc.CallOption) (*KvWriteReply, error) {
	out := new(KvWriteReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawDelete(ctx context.Context, in *KvTxWriteReq, opts ...grpc.CallOption) (*KvTxWriteReply, error) {
	out := new(KvTxWriteReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvstoreServer is the server API for Kvstore service.
type KvstoreServer interface {
	KvTxPrepare(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error)
	KvTxCommit(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error)
	KvTxRead(context.Context, *KvTxReadReq) (*KvTxReadReply, error)
	KvRawRead(context.Context, *KvReadReq) (*KvReadReply, error)
	KvRawWrite(context.Context, *KvWriteReq) (*KvWriteReply, error)
	KvRawDelete(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error)
}

// UnimplementedKvstoreServer can be embedded to have forward compatible implementations.
type UnimplementedKvstoreServer struct {
}

func (*UnimplementedKvstoreServer) KvTxPrepare(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxPrepare not implemented")
}
func (*UnimplementedKvstoreServer) KvTxCommit(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxCommit not implemented")
}
func (*UnimplementedKvstoreServer) KvTxRead(context.Context, *KvTxReadReq) (*KvTxReadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawRead(context.Context, *KvReadReq) (*KvReadReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawWrite(context.Context, *KvWriteReq) (*KvWriteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawWrite not implemented")
}
func (*UnimplementedKvstoreServer) KvRawDelete(context.Context, *KvTxWriteReq) (*KvTxWriteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawDelete not implemented")
}

func RegisterKvstoreServer(s *grpc.Server, srv KvstoreServer) {
	s.RegisterService(&_Kvstore_serviceDesc, srv)
}

func _Kvstore_KvTxPrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxWriteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxPrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxPrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxPrepare(ctx, req.(*KvTxWriteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxWriteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxCommit(ctx, req.(*KvTxWriteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxRead(ctx, req.(*KvTxReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvReadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawRead(ctx, req.(*KvReadReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvWriteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawWrite(ctx, req.(*KvWriteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxWriteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawDelete(ctx, req.(*KvTxWriteReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kvstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvstorepb.kvstore",
	HandlerType: (*KvstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KvTxPrepare",
			Handler:    _Kvstore_KvTxPrepare_Handler,
		},
		{
			MethodName: "KvTxCommit",
			Handler:    _Kvstore_KvTxCommit_Handler,
		},
		{
			MethodName: "KvTxRead",
			Handler:    _Kvstore_KvTxRead_Handler,
		},
		{
			MethodName: "KvRawRead",
			Handler:    _Kvstore_KvRawRead_Handler,
		},
		{
			MethodName: "KvRawWrite",
			Handler:    _Kvstore_KvRawWrite_Handler,
		},
		{
			MethodName: "KvRawDelete",
			Handler:    _Kvstore_KvRawDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/kv-storepb.proto",
}
