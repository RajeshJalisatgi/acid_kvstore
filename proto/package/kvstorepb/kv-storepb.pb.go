// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: proto/kv-storepb.proto

package kvstorepb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// message KvTxWriteReply {
//TxContext TxContext = 1;
//Command   Command = 2;
//Status Status = 3;
//}
type Status int32

const (
	Status_Success Status = 0
	Status_Failure Status = 1
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "Success",
		1: "Failure",
	}
	Status_value = map[string]int32{
		"Success": 0,
		"Failure": 1,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_kv_storepb_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_kv_storepb_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{0}
}

//Prepare
//Commit
//TxRead
//RawReead
//RawWrite
//RawDelete
type TxContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId    uint64 `protobuf:"varint,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ShardId uint64 `protobuf:"varint,2,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
}

func (x *TxContext) Reset() {
	*x = TxContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxContext) ProtoMessage() {}

func (x *TxContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxContext.ProtoReflect.Descriptor instead.
func (*TxContext) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{0}
}

func (x *TxContext) GetTxId() uint64 {
	if x != nil {
		return x.TxId
	}
	return 0
}

func (x *TxContext) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type KvTxReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
}

func (x *KvTxReadReq) Reset() {
	*x = KvTxReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReadReq) ProtoMessage() {}

func (x *KvTxReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReadReq.ProtoReflect.Descriptor instead.
func (*KvTxReadReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{1}
}

func (x *KvTxReadReq) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReadReq) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type KvTxReadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	Command   *Command   `protobuf:"bytes,2,opt,name=Command,proto3" json:"Command,omitempty"`
	Status    Status     `protobuf:"varint,3,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *KvTxReadReply) Reset() {
	*x = KvTxReadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReadReply) ProtoMessage() {}

func (x *KvTxReadReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReadReply.ProtoReflect.Descriptor instead.
func (*KvTxReadReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{2}
}

func (x *KvTxReadReply) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReadReply) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *KvTxReadReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvTxReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext   *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	CommandList []*Command `protobuf:"bytes,2,rep,name=CommandList,proto3" json:"CommandList,omitempty"`
}

func (x *KvTxReq) Reset() {
	*x = KvTxReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReq) ProtoMessage() {}

func (x *KvTxReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReq.ProtoReflect.Descriptor instead.
func (*KvTxReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{3}
}

func (x *KvTxReq) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReq) GetCommandList() []*Command {
	if x != nil {
		return x.CommandList
	}
	return nil
}

type KvTxReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxContext   *TxContext `protobuf:"bytes,1,opt,name=TxContext,proto3" json:"TxContext,omitempty"`
	CommandList []*Command `protobuf:"bytes,2,rep,name=CommandList,proto3" json:"CommandList,omitempty"`
	Status      Status     `protobuf:"varint,4,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *KvTxReply) Reset() {
	*x = KvTxReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxReply) ProtoMessage() {}

func (x *KvTxReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxReply.ProtoReflect.Descriptor instead.
func (*KvTxReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{4}
}

func (x *KvTxReply) GetTxContext() *TxContext {
	if x != nil {
		return x.TxContext
	}
	return nil
}

func (x *KvTxReply) GetCommandList() []*Command {
	if x != nil {
		return x.CommandList
	}
	return nil
}

func (x *KvTxReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx uint64 `protobuf:"varint,1,opt,name=Idx,proto3" json:"Idx,omitempty"`
	Op  string `protobuf:"bytes,2,opt,name=Op,proto3" json:"Op,omitempty"`
	Key string `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Val string `protobuf:"bytes,4,opt,name=Val,proto3" json:"Val,omitempty"` // string Stage = 5;
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{5}
}

func (x *Command) GetIdx() uint64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *Command) GetOp() string {
	if x != nil {
		return x.Op
	}
	return ""
}

func (x *Command) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Command) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type KvRawReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KvRawReq) Reset() {
	*x = KvRawReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvRawReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvRawReq) ProtoMessage() {}

func (x *KvRawReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvRawReq.ProtoReflect.Descriptor instead.
func (*KvRawReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{6}
}

func (x *KvRawReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvRawReq) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

type KvRawReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val    string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	Status Status `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvRawReply) Reset() {
	*x = KvRawReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvRawReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvRawReply) ProtoMessage() {}

func (x *KvRawReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvRawReply.ProtoReflect.Descriptor instead.
func (*KvRawReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{7}
}

func (x *KvRawReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvRawReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KvRawReply) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *KvRawReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvWriteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key uint64 `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Val uint64 `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KvWriteReq) Reset() {
	*x = KvWriteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvWriteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvWriteReq) ProtoMessage() {}

func (x *KvWriteReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvWriteReq.ProtoReflect.Descriptor instead.
func (*KvWriteReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{8}
}

func (x *KvWriteReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvWriteReq) GetKey() uint64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *KvWriteReq) GetVal() uint64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type KvWriteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Val    string `protobuf:"bytes,3,opt,name=val,proto3" json:"val,omitempty"`
	Status Status `protobuf:"varint,4,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvWriteReply) Reset() {
	*x = KvWriteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvWriteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvWriteReply) ProtoMessage() {}

func (x *KvWriteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvWriteReply.ProtoReflect.Descriptor instead.
func (*KvWriteReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{9}
}

func (x *KvWriteReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *KvWriteReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KvWriteReply) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

func (x *KvWriteReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

//Replica config === Region in tinyKV
// One Replica - one Shard
type KeyRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartKey uint64 `protobuf:"varint,1,opt,name=StartKey,proto3" json:"StartKey,omitempty"`
	EndKey   uint64 `protobuf:"varint,2,opt,name=EndKey,proto3" json:"EndKey,omitempty"`
}

func (x *KeyRange) Reset() {
	*x = KeyRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRange) ProtoMessage() {}

func (x *KeyRange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRange.ProtoReflect.Descriptor instead.
func (*KeyRange) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{10}
}

func (x *KeyRange) GetStartKey() uint64 {
	if x != nil {
		return x.StartKey
	}
	return 0
}

func (x *KeyRange) GetEndKey() uint64 {
	if x != nil {
		return x.EndKey
	}
	return 0
}

type ReplicaConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxLeader   string `protobuf:"bytes,1,opt,name=TxLeader,proto3" json:"TxLeader,omitempty"`
	ReplLeader string `protobuf:"bytes,2,opt,name=ReplLeader,proto3" json:"ReplLeader,omitempty"`
	ReplicaId  uint32 `protobuf:"varint,3,opt,name=ReplicaId,proto3" json:"ReplicaId,omitempty"`
	Nshards    uint32 `protobuf:"varint,4,opt,name=Nshards,proto3" json:"Nshards,omitempty"`
}

func (x *ReplicaConfig) Reset() {
	*x = ReplicaConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaConfig) ProtoMessage() {}

func (x *ReplicaConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaConfig.ProtoReflect.Descriptor instead.
func (*ReplicaConfig) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{11}
}

func (x *ReplicaConfig) GetTxLeader() string {
	if x != nil {
		return x.TxLeader
	}
	return ""
}

func (x *ReplicaConfig) GetReplLeader() string {
	if x != nil {
		return x.ReplLeader
	}
	return ""
}

func (x *ReplicaConfig) GetReplicaId() uint32 {
	if x != nil {
		return x.ReplicaId
	}
	return 0
}

func (x *ReplicaConfig) GetNshards() uint32 {
	if x != nil {
		return x.Nshards
	}
	return 0
}

type ShardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId  int32     `protobuf:"varint,1,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	Peers    []string  `protobuf:"bytes,2,rep,name=Peers,proto3" json:"Peers,omitempty"`
	TxLeader string    `protobuf:"bytes,3,opt,name=TxLeader,proto3" json:"TxLeader,omitempty"`
	Key      *KeyRange `protobuf:"bytes,4,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *ShardConfig) Reset() {
	*x = ShardConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConfig) ProtoMessage() {}

func (x *ShardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConfig.ProtoReflect.Descriptor instead.
func (*ShardConfig) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{12}
}

func (x *ShardConfig) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardConfig) GetPeers() []string {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ShardConfig) GetTxLeader() string {
	if x != nil {
		return x.TxLeader
	}
	return ""
}

func (x *ShardConfig) GetKey() *KeyRange {
	if x != nil {
		return x.Key
	}
	return nil
}

type ReplicaJoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId int32        `protobuf:"varint,1,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
	Config  *ShardConfig `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
}

func (x *ReplicaJoinReq) Reset() {
	*x = ReplicaJoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaJoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaJoinReq) ProtoMessage() {}

func (x *ReplicaJoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaJoinReq.ProtoReflect.Descriptor instead.
func (*ReplicaJoinReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{13}
}

func (x *ReplicaJoinReq) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ReplicaJoinReq) GetConfig() *ShardConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ReplicaJoinReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *ReplicaJoinReply) Reset() {
	*x = ReplicaJoinReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaJoinReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaJoinReply) ProtoMessage() {}

func (x *ReplicaJoinReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaJoinReply.ProtoReflect.Descriptor instead.
func (*ReplicaJoinReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{14}
}

func (x *ReplicaJoinReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type ReplicaLeaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShardId uint64 `protobuf:"varint,1,opt,name=ShardId,proto3" json:"ShardId,omitempty"`
}

func (x *ReplicaLeaveReq) Reset() {
	*x = ReplicaLeaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaLeaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaLeaveReq) ProtoMessage() {}

func (x *ReplicaLeaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaLeaveReq.ProtoReflect.Descriptor instead.
func (*ReplicaLeaveReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{15}
}

func (x *ReplicaLeaveReq) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type ReplicaLeaveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *ReplicaLeaveReply) Reset() {
	*x = ReplicaLeaveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaLeaveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaLeaveReply) ProtoMessage() {}

func (x *ReplicaLeaveReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaLeaveReply.ProtoReflect.Descriptor instead.
func (*ReplicaLeaveReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{16}
}

func (x *ReplicaLeaveReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type ReplicaConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ReplicaConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ReplicaConfigReq) Reset() {
	*x = ReplicaConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaConfigReq) ProtoMessage() {}

func (x *ReplicaConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaConfigReq.ProtoReflect.Descriptor instead.
func (*ReplicaConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{17}
}

func (x *ReplicaConfigReq) GetConfig() *ReplicaConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ReplicaConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *ReplicaConfigResp) Reset() {
	*x = ReplicaConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaConfigResp) ProtoMessage() {}

func (x *ReplicaConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaConfigResp.ProtoReflect.Descriptor instead.
func (*ReplicaConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{18}
}

func (x *ReplicaConfigResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type ShardConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config []*ShardConfig `protobuf:"bytes,1,rep,name=Config,proto3" json:"Config,omitempty"`
}

func (x *ShardConfigReq) Reset() {
	*x = ShardConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConfigReq) ProtoMessage() {}

func (x *ShardConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConfigReq.ProtoReflect.Descriptor instead.
func (*ShardConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{19}
}

func (x *ShardConfigReq) GetConfig() []*ShardConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ShardConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=Status,proto3,enum=kvstorepb.Status" json:"Status,omitempty"`
}

func (x *ShardConfigResp) Reset() {
	*x = ShardConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShardConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardConfigResp) ProtoMessage() {}

func (x *ShardConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardConfigResp.ProtoReflect.Descriptor instead.
func (*ShardConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{20}
}

func (x *ShardConfigResp) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvStoreLeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvStoreLeader string `protobuf:"bytes,1,opt,name=kvStoreLeader,proto3" json:"kvStoreLeader,omitempty"`
	Status        Status `protobuf:"varint,2,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvStoreLeader) Reset() {
	*x = KvStoreLeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvStoreLeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvStoreLeader) ProtoMessage() {}

func (x *KvStoreLeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvStoreLeader.ProtoReflect.Descriptor instead.
func (*KvStoreLeader) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{21}
}

func (x *KvStoreLeader) GetKvStoreLeader() string {
	if x != nil {
		return x.KvStoreLeader
	}
	return ""
}

func (x *KvStoreLeader) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type KvNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvNode   string `protobuf:"bytes,1,opt,name=KvNode,proto3" json:"KvNode,omitempty"`
	KvNodeId uint64 `protobuf:"varint,2,opt,name=KvNodeId,proto3" json:"KvNodeId,omitempty"`
	KvLeader uint64 `protobuf:"varint,3,opt,name=KvLeader,proto3" json:"KvLeader,omitempty"`
}

func (x *KvNode) Reset() {
	*x = KvNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvNode) ProtoMessage() {}

func (x *KvNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvNode.ProtoReflect.Descriptor instead.
func (*KvNode) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{22}
}

func (x *KvNode) GetKvNode() string {
	if x != nil {
		return x.KvNode
	}
	return ""
}

func (x *KvNode) GetKvNodeId() uint64 {
	if x != nil {
		return x.KvNodeId
	}
	return 0
}

func (x *KvNode) GetKvLeader() uint64 {
	if x != nil {
		return x.KvLeader
	}
	return 0
}

type KvTxStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=kvstorepb.Status" json:"status,omitempty"`
}

func (x *KvTxStatusReply) Reset() {
	*x = KvTxStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvTxStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvTxStatusReply) ProtoMessage() {}

func (x *KvTxStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvTxStatusReply.ProtoReflect.Descriptor instead.
func (*KvTxStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{23}
}

func (x *KvTxStatusReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type ReplicaStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KvStoreInfo []*KvStoreLeader `protobuf:"bytes,1,rep,name=KvStoreInfo,proto3" json:"KvStoreInfo,omitempty"`
}

func (x *ReplicaStatus) Reset() {
	*x = ReplicaStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_kv_storepb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaStatus) ProtoMessage() {}

func (x *ReplicaStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_kv_storepb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaStatus.ProtoReflect.Descriptor instead.
func (*ReplicaStatus) Descriptor() ([]byte, []int) {
	return file_proto_kv_storepb_proto_rawDescGZIP(), []int{24}
}

func (x *ReplicaStatus) GetKvStoreInfo() []*KvStoreLeader {
	if x != nil {
		return x.KvStoreInfo
	}
	return nil
}

var File_proto_kv_storepb_proto protoreflect.FileDescriptor

var file_proto_kv_storepb_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x76, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x22, 0x39, 0x0a, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x54, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x6f,
	0x0a, 0x0b, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a,
	0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22,
	0x9c, 0x01, 0x0a, 0x0d, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x54, 0x78, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73,
	0x0a, 0x07, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x78, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x09, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x09, 0x54, 0x78, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4f, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x49, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x4f, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x56, 0x61, 0x6c, 0x22, 0x2c, 0x0a, 0x08, 0x4b, 0x76, 0x52, 0x61, 0x77,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x6b, 0x0a, 0x0a, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x40, 0x0a, 0x0a, 0x4b, 0x76, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x76, 0x61, 0x6c, 0x22, 0x6d, 0x0a, 0x0c, 0x4b, 0x76, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x45,
	0x6e, 0x64, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x45, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x78, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x4e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x4e, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0b, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x78, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b,
	0x65, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x5a, 0x0a, 0x0e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x53, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3d, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3e, 0x0a, 0x11, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x0e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3c, 0x0a, 0x0f,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x60, 0x0a, 0x0d, 0x4b, 0x76,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6b,
	0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x06,
	0x4b, 0x76, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4b, 0x76, 0x4e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4b, 0x76, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4b, 0x76, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x4b, 0x76, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x76,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4b, 0x76,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x0f, 0x4b, 0x76, 0x54, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x4b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x76, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x4b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2a, 0x22, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x10, 0x01, 0x32, 0xcf, 0x05, 0x0a, 0x07, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x37, 0x0a, 0x0b, 0x4b, 0x76, 0x54, 0x78, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x12, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x4b, 0x76,
	0x54, 0x78, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x6f, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b,
	0x76, 0x54, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x08,
	0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x54, 0x78, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x37, 0x0a, 0x09, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x13, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x52, 0x61,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0a, 0x4b,
	0x76, 0x52, 0x61, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x52, 0x61, 0x77,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62,
	0x2e, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6b, 0x76, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x4b, 0x76, 0x52, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x47, 0x0a, 0x0d, 0x4b, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x19, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6b,
	0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x4b, 0x76, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x52, 0x0a, 0x15, 0x4b, 0x76, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b,
	0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x13, 0x4b, 0x76, 0x53,
	0x68, 0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x19, 0x2e, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6b, 0x76,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x2f, 0x6b, 0x76, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_kv_storepb_proto_rawDescOnce sync.Once
	file_proto_kv_storepb_proto_rawDescData = file_proto_kv_storepb_proto_rawDesc
)

func file_proto_kv_storepb_proto_rawDescGZIP() []byte {
	file_proto_kv_storepb_proto_rawDescOnce.Do(func() {
		file_proto_kv_storepb_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_kv_storepb_proto_rawDescData)
	})
	return file_proto_kv_storepb_proto_rawDescData
}

var file_proto_kv_storepb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_kv_storepb_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_kv_storepb_proto_goTypes = []interface{}{
	(Status)(0),               // 0: kvstorepb.Status
	(*TxContext)(nil),         // 1: kvstorepb.TxContext
	(*KvTxReadReq)(nil),       // 2: kvstorepb.KvTxReadReq
	(*KvTxReadReply)(nil),     // 3: kvstorepb.KvTxReadReply
	(*KvTxReq)(nil),           // 4: kvstorepb.KvTxReq
	(*KvTxReply)(nil),         // 5: kvstorepb.KvTxReply
	(*Command)(nil),           // 6: kvstorepb.Command
	(*KvRawReq)(nil),          // 7: kvstorepb.KvRawReq
	(*KvRawReply)(nil),        // 8: kvstorepb.KvRawReply
	(*KvWriteReq)(nil),        // 9: kvstorepb.KvWriteReq
	(*KvWriteReply)(nil),      // 10: kvstorepb.KvWriteReply
	(*KeyRange)(nil),          // 11: kvstorepb.KeyRange
	(*ReplicaConfig)(nil),     // 12: kvstorepb.ReplicaConfig
	(*ShardConfig)(nil),       // 13: kvstorepb.ShardConfig
	(*ReplicaJoinReq)(nil),    // 14: kvstorepb.ReplicaJoinReq
	(*ReplicaJoinReply)(nil),  // 15: kvstorepb.ReplicaJoinReply
	(*ReplicaLeaveReq)(nil),   // 16: kvstorepb.ReplicaLeaveReq
	(*ReplicaLeaveReply)(nil), // 17: kvstorepb.ReplicaLeaveReply
	(*ReplicaConfigReq)(nil),  // 18: kvstorepb.ReplicaConfigReq
	(*ReplicaConfigResp)(nil), // 19: kvstorepb.ReplicaConfigResp
	(*ShardConfigReq)(nil),    // 20: kvstorepb.ShardConfigReq
	(*ShardConfigResp)(nil),   // 21: kvstorepb.ShardConfigResp
	(*KvStoreLeader)(nil),     // 22: kvstorepb.KvStoreLeader
	(*KvNode)(nil),            // 23: kvstorepb.KvNode
	(*KvTxStatusReply)(nil),   // 24: kvstorepb.KvTxStatusReply
	(*ReplicaStatus)(nil),     // 25: kvstorepb.ReplicaStatus
}
var file_proto_kv_storepb_proto_depIdxs = []int32{
	1,  // 0: kvstorepb.KvTxReadReq.TxContext:type_name -> kvstorepb.TxContext
	6,  // 1: kvstorepb.KvTxReadReq.Command:type_name -> kvstorepb.Command
	1,  // 2: kvstorepb.KvTxReadReply.TxContext:type_name -> kvstorepb.TxContext
	6,  // 3: kvstorepb.KvTxReadReply.Command:type_name -> kvstorepb.Command
	0,  // 4: kvstorepb.KvTxReadReply.Status:type_name -> kvstorepb.Status
	1,  // 5: kvstorepb.KvTxReq.TxContext:type_name -> kvstorepb.TxContext
	6,  // 6: kvstorepb.KvTxReq.CommandList:type_name -> kvstorepb.Command
	1,  // 7: kvstorepb.KvTxReply.TxContext:type_name -> kvstorepb.TxContext
	6,  // 8: kvstorepb.KvTxReply.CommandList:type_name -> kvstorepb.Command
	0,  // 9: kvstorepb.KvTxReply.Status:type_name -> kvstorepb.Status
	0,  // 10: kvstorepb.KvRawReply.status:type_name -> kvstorepb.Status
	0,  // 11: kvstorepb.KvWriteReply.status:type_name -> kvstorepb.Status
	11, // 12: kvstorepb.ShardConfig.Key:type_name -> kvstorepb.KeyRange
	13, // 13: kvstorepb.ReplicaJoinReq.Config:type_name -> kvstorepb.ShardConfig
	0,  // 14: kvstorepb.ReplicaJoinReply.Status:type_name -> kvstorepb.Status
	0,  // 15: kvstorepb.ReplicaLeaveReply.Status:type_name -> kvstorepb.Status
	12, // 16: kvstorepb.ReplicaConfigReq.config:type_name -> kvstorepb.ReplicaConfig
	0,  // 17: kvstorepb.ReplicaConfigResp.Status:type_name -> kvstorepb.Status
	13, // 18: kvstorepb.ShardConfigReq.Config:type_name -> kvstorepb.ShardConfig
	0,  // 19: kvstorepb.ShardConfigResp.Status:type_name -> kvstorepb.Status
	0,  // 20: kvstorepb.KvStoreLeader.status:type_name -> kvstorepb.Status
	0,  // 21: kvstorepb.KvTxStatusReply.status:type_name -> kvstorepb.Status
	22, // 22: kvstorepb.ReplicaStatus.KvStoreInfo:type_name -> kvstorepb.KvStoreLeader
	4,  // 23: kvstorepb.kvstore.KvTxPrepare:input_type -> kvstorepb.KvTxReq
	4,  // 24: kvstorepb.kvstore.KvTxCommit:input_type -> kvstorepb.KvTxReq
	4,  // 25: kvstorepb.kvstore.KvTxRollback:input_type -> kvstorepb.KvTxReq
	4,  // 26: kvstorepb.kvstore.KvTxRead:input_type -> kvstorepb.KvTxReq
	7,  // 27: kvstorepb.kvstore.KvRawRead:input_type -> kvstorepb.KvRawReq
	7,  // 28: kvstorepb.kvstore.KvRawWrite:input_type -> kvstorepb.KvRawReq
	7,  // 29: kvstorepb.kvstore.KvRawDelete:input_type -> kvstorepb.KvRawReq
	14, // 30: kvstorepb.kvstore.KvReplicaJoin:input_type -> kvstorepb.ReplicaJoinReq
	16, // 31: kvstorepb.kvstore.KvReplicaLeave:input_type -> kvstorepb.ReplicaLeaveReq
	18, // 32: kvstorepb.kvstore.KvReplicaUpdateConfig:input_type -> kvstorepb.ReplicaConfigReq
	20, // 33: kvstorepb.kvstore.KvShardUpdateConfig:input_type -> kvstorepb.ShardConfigReq
	5,  // 34: kvstorepb.kvstore.KvTxPrepare:output_type -> kvstorepb.KvTxReply
	5,  // 35: kvstorepb.kvstore.KvTxCommit:output_type -> kvstorepb.KvTxReply
	5,  // 36: kvstorepb.kvstore.KvTxRollback:output_type -> kvstorepb.KvTxReply
	5,  // 37: kvstorepb.kvstore.KvTxRead:output_type -> kvstorepb.KvTxReply
	8,  // 38: kvstorepb.kvstore.KvRawRead:output_type -> kvstorepb.KvRawReply
	8,  // 39: kvstorepb.kvstore.KvRawWrite:output_type -> kvstorepb.KvRawReply
	8,  // 40: kvstorepb.kvstore.KvRawDelete:output_type -> kvstorepb.KvRawReply
	15, // 41: kvstorepb.kvstore.KvReplicaJoin:output_type -> kvstorepb.ReplicaJoinReply
	17, // 42: kvstorepb.kvstore.KvReplicaLeave:output_type -> kvstorepb.ReplicaLeaveReply
	19, // 43: kvstorepb.kvstore.KvReplicaUpdateConfig:output_type -> kvstorepb.ReplicaConfigResp
	21, // 44: kvstorepb.kvstore.KvShardUpdateConfig:output_type -> kvstorepb.ShardConfigResp
	34, // [34:45] is the sub-list for method output_type
	23, // [23:34] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_kv_storepb_proto_init() }
func file_proto_kv_storepb_proto_init() {
	if File_proto_kv_storepb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_kv_storepb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvRawReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvRawReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvWriteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvWriteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaJoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaJoinReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaLeaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaLeaveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShardConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvStoreLeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvTxStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_kv_storepb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_kv_storepb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_kv_storepb_proto_goTypes,
		DependencyIndexes: file_proto_kv_storepb_proto_depIdxs,
		EnumInfos:         file_proto_kv_storepb_proto_enumTypes,
		MessageInfos:      file_proto_kv_storepb_proto_msgTypes,
	}.Build()
	File_proto_kv_storepb_proto = out.File
	file_proto_kv_storepb_proto_rawDesc = nil
	file_proto_kv_storepb_proto_goTypes = nil
	file_proto_kv_storepb_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KvstoreClient is the client API for Kvstore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KvstoreClient interface {
	KvTxPrepare(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxCommit(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxRollback(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvTxRead(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error)
	KvRawRead(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvRawWrite(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvRawDelete(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error)
	KvReplicaJoin(ctx context.Context, in *ReplicaJoinReq, opts ...grpc.CallOption) (*ReplicaJoinReply, error)
	KvReplicaLeave(ctx context.Context, in *ReplicaLeaveReq, opts ...grpc.CallOption) (*ReplicaLeaveReply, error)
	KvReplicaUpdateConfig(ctx context.Context, in *ReplicaConfigReq, opts ...grpc.CallOption) (*ReplicaConfigResp, error)
	KvShardUpdateConfig(ctx context.Context, in *ShardConfigReq, opts ...grpc.CallOption) (*ShardConfigResp, error)
}

type kvstoreClient struct {
	cc grpc.ClientConnInterface
}

func NewKvstoreClient(cc grpc.ClientConnInterface) KvstoreClient {
	return &kvstoreClient{cc}
}

func (c *kvstoreClient) KvTxPrepare(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxPrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxCommit(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxRollback(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxRollback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvTxRead(ctx context.Context, in *KvTxReq, opts ...grpc.CallOption) (*KvTxReply, error) {
	out := new(KvTxReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvTxRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawRead(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawWrite(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawWrite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvRawDelete(ctx context.Context, in *KvRawReq, opts ...grpc.CallOption) (*KvRawReply, error) {
	out := new(KvRawReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvRawDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaJoin(ctx context.Context, in *ReplicaJoinReq, opts ...grpc.CallOption) (*ReplicaJoinReply, error) {
	out := new(ReplicaJoinReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaLeave(ctx context.Context, in *ReplicaLeaveReq, opts ...grpc.CallOption) (*ReplicaLeaveReply, error) {
	out := new(ReplicaLeaveReply)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaLeave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvReplicaUpdateConfig(ctx context.Context, in *ReplicaConfigReq, opts ...grpc.CallOption) (*ReplicaConfigResp, error) {
	out := new(ReplicaConfigResp)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvReplicaUpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kvstoreClient) KvShardUpdateConfig(ctx context.Context, in *ShardConfigReq, opts ...grpc.CallOption) (*ShardConfigResp, error) {
	out := new(ShardConfigResp)
	err := c.cc.Invoke(ctx, "/kvstorepb.kvstore/KvShardUpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KvstoreServer is the server API for Kvstore service.
type KvstoreServer interface {
	KvTxPrepare(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxCommit(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxRollback(context.Context, *KvTxReq) (*KvTxReply, error)
	KvTxRead(context.Context, *KvTxReq) (*KvTxReply, error)
	KvRawRead(context.Context, *KvRawReq) (*KvRawReply, error)
	KvRawWrite(context.Context, *KvRawReq) (*KvRawReply, error)
	KvRawDelete(context.Context, *KvRawReq) (*KvRawReply, error)
	KvReplicaJoin(context.Context, *ReplicaJoinReq) (*ReplicaJoinReply, error)
	KvReplicaLeave(context.Context, *ReplicaLeaveReq) (*ReplicaLeaveReply, error)
	KvReplicaUpdateConfig(context.Context, *ReplicaConfigReq) (*ReplicaConfigResp, error)
	KvShardUpdateConfig(context.Context, *ShardConfigReq) (*ShardConfigResp, error)
}

// UnimplementedKvstoreServer can be embedded to have forward compatible implementations.
type UnimplementedKvstoreServer struct {
}

func (*UnimplementedKvstoreServer) KvTxPrepare(context.Context, *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxPrepare not implemented")
}
func (*UnimplementedKvstoreServer) KvTxCommit(context.Context, *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxCommit not implemented")
}
func (*UnimplementedKvstoreServer) KvTxRollback(context.Context, *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxRollback not implemented")
}
func (*UnimplementedKvstoreServer) KvTxRead(context.Context, *KvTxReq) (*KvTxReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvTxRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawRead(context.Context, *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawRead not implemented")
}
func (*UnimplementedKvstoreServer) KvRawWrite(context.Context, *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawWrite not implemented")
}
func (*UnimplementedKvstoreServer) KvRawDelete(context.Context, *KvRawReq) (*KvRawReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvRawDelete not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaJoin(context.Context, *ReplicaJoinReq) (*ReplicaJoinReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaJoin not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaLeave(context.Context, *ReplicaLeaveReq) (*ReplicaLeaveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaLeave not implemented")
}
func (*UnimplementedKvstoreServer) KvReplicaUpdateConfig(context.Context, *ReplicaConfigReq) (*ReplicaConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvReplicaUpdateConfig not implemented")
}
func (*UnimplementedKvstoreServer) KvShardUpdateConfig(context.Context, *ShardConfigReq) (*ShardConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KvShardUpdateConfig not implemented")
}

func RegisterKvstoreServer(s *grpc.Server, srv KvstoreServer) {
	s.RegisterService(&_Kvstore_serviceDesc, srv)
}

func _Kvstore_KvTxPrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxPrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxPrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxPrepare(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxCommit(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxRollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxRollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxRollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxRollback(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvTxRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvTxReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvTxRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvTxRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvTxRead(ctx, req.(*KvTxReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawRead(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawWrite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawWrite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawWrite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawWrite(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvRawDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KvRawReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvRawDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvRawDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvRawDelete(ctx, req.(*KvRawReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaJoin(ctx, req.(*ReplicaJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaLeave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaLeaveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaLeave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaLeave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaLeave(ctx, req.(*ReplicaLeaveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvReplicaUpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvReplicaUpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvReplicaUpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvReplicaUpdateConfig(ctx, req.(*ReplicaConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Kvstore_KvShardUpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShardConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KvstoreServer).KvShardUpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kvstorepb.kvstore/KvShardUpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KvstoreServer).KvShardUpdateConfig(ctx, req.(*ShardConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kvstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kvstorepb.kvstore",
	HandlerType: (*KvstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "KvTxPrepare",
			Handler:    _Kvstore_KvTxPrepare_Handler,
		},
		{
			MethodName: "KvTxCommit",
			Handler:    _Kvstore_KvTxCommit_Handler,
		},
		{
			MethodName: "KvTxRollback",
			Handler:    _Kvstore_KvTxRollback_Handler,
		},
		{
			MethodName: "KvTxRead",
			Handler:    _Kvstore_KvTxRead_Handler,
		},
		{
			MethodName: "KvRawRead",
			Handler:    _Kvstore_KvRawRead_Handler,
		},
		{
			MethodName: "KvRawWrite",
			Handler:    _Kvstore_KvRawWrite_Handler,
		},
		{
			MethodName: "KvRawDelete",
			Handler:    _Kvstore_KvRawDelete_Handler,
		},
		{
			MethodName: "KvReplicaJoin",
			Handler:    _Kvstore_KvReplicaJoin_Handler,
		},
		{
			MethodName: "KvReplicaLeave",
			Handler:    _Kvstore_KvReplicaLeave_Handler,
		},
		{
			MethodName: "KvReplicaUpdateConfig",
			Handler:    _Kvstore_KvReplicaUpdateConfig_Handler,
		},
		{
			MethodName: "KvShardUpdateConfig",
			Handler:    _Kvstore_KvShardUpdateConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/kv-storepb.proto",
}
